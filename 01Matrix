BFS: T.c --> O(m*n) , S.c --> O(m*n)

class Solution {
    int[][] dirs = {{-1,0},{1,0},{0,-1},{0,1}};
    public int[][] updateMatrix(int[][] mat) {
        int m = mat.length;
        int n = mat[0].length;
        Queue<int[]> q = new LinkedList<>();

        for(int i =0; i<m; i++){
            for(int j =0; j<n; j++){
                if(mat[i][j] == 0){
                    q.add(new int[] {i,j});
                }else{
                    mat[i][j] = -1;
                }
            }
        }
        int level = 0;
        while(!q.isEmpty()){
           level = level+1; 
           int size = q.size();           
           for(int i =0; i<size; i++){
            int[] curr = q.poll();
            for(int[] dir: dirs){
                int nr= dir[0]+curr[0];
                int nc = dir[1]+curr[1];
                if(nr>=0 && nr<m && nc>=0 && nc<n && mat[nr][nc] == -1){
                    mat[nr][nc] = level;
                    q.add(new int[] {nr,nc});
                }
            }
           }           
        }        
        return mat;
    }
}